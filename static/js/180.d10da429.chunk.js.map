{"version":3,"file":"static/js/180.d10da429.chunk.js","mappings":"wNAEaA,EAAcC,EAAAA,EAAAA,GAAH,kUAiBXC,EAAeD,EAAAA,EAAAA,IAAH,qGAOZE,EAAaF,EAAAA,EAAAA,EAAH,8F,SCGvB,I,EAAA,EArBA,YAAkE,IAAD,IAApCG,MAASC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACzCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA1C,WACE,SAACN,EAAD,CAAcW,IAAKN,EAAYO,IAAKR,KACpC,SAACH,EAAD,UAAaG,QAIpB,ECjBYS,EAAcd,EAAAA,EAAAA,GAAH,oKCyBxB,MAvBA,YAAoC,IAAXe,EAAU,EAAVA,OACvB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,SAAAb,GAAK,OACf,SAAC,EAAD,CAAkCA,MAAOA,GAAjBA,EAAMC,GADf,KAKtB,C,mGCTYa,GAAmBjB,EAAAA,EAAAA,GAAOkB,IAAPlB,CAAH,mqB,kBC8B7B,MA3BA,YAAuD,IAAjCmB,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAItC,OACE,SAACJ,EAAD,CACEK,eAAe,SAAC,MAAD,IACfC,WAAW,SAAC,MAAD,IACXC,WAAW,MACXC,UAAWL,EACXM,mBAAoB,EACpBC,qBAAsB,EACtBC,aAXoB,SAAAC,GACtBR,EAAWQ,EAAMC,SAAW,EAC7B,EAUGC,gBAAgB,SAChBC,YAAa,SAACb,EAAMM,GAAP,OACXN,GAAQ,GAAKA,GAAQM,EAArB,gBAA0CN,GAAS,GADxC,EAGbc,UAAWd,EAAO,GAGvB,C,sMCvBYe,EAAOlC,EAAAA,EAAAA,KAAH,yNAYJmC,EAAQnC,EAAAA,EAAAA,MAAH,mRAgBLoC,EAAepC,EAAAA,EAAAA,OAAH,+PAcZqC,GAAarC,EAAAA,EAAAA,GAAOsC,EAAAA,IAAPtC,CAAH,iK,SCRvB,I,IAAA,EAjCA,YAAmC,IAAbuC,EAAY,EAAZA,SACdC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,IAETJ,SAAU,SAAAK,GACRL,EAASK,EAAOD,OAChBH,EAAOK,WACR,IAGKC,EAAuCN,EAAvCM,aAAcC,EAAyBP,EAAzBO,aAAcH,EAAWJ,EAAXI,OAEpC,OACE,UAACV,EAAD,CAAMK,SAAUO,EAAhB,WACE,SAACX,EAAD,CACEa,KAAK,OACLC,KAAK,QACLC,SAAUH,EACVJ,MAAOC,EAAOD,MACdQ,YAAY,mBAEd,SAACf,EAAD,CAAcY,KAAK,SAAnB,UACE,SAACX,EAAD,QAIP,E,8BC7BYe,EAAYpD,EAAAA,EAAAA,IAAH,0PAaTqD,EAAOrD,EAAAA,EAAAA,KAAH,yCCwHjB,MA5HA,WACE,OAAwCsD,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAASF,EAAaG,IAAI,UAApD,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4CH,EAAAA,EAAAA,UAAS,IAArD,eAAOI,EAAP,KAAuBC,EAAvB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,QAArC,eAAOM,EAAP,KAAeC,EAAf,KACA,GAAwBP,EAAAA,EAAAA,UAASF,EAAaG,IAAI,SAAlD,eAAOvC,EAAP,KAAa8C,EAAb,KACA,GAAoCR,EAAAA,EAAAA,UAAS,GAA7C,eAAOrC,EAAP,KAAmB8C,EAAnB,KACA,GAAwCT,EAAAA,EAAAA,UAAS,CAAET,KAAM,GAAImB,QAAS,KAAtE,eAAOC,EAAP,KAAqBC,EAArB,KAmGA,OAjGAC,EAAAA,EAAAA,YAAU,WACR,GAAKX,EAAL,CAEA,IAAMY,EAAkB,IAAIC,gBAkC5B,OArCc,mCAmCdC,GAEO,WACLF,EAAgBG,OACjB,CAtCiB,CADJ,wCAKd,+FACEV,EAAU,WADZ,mBAGuDW,EAAAA,EAAAA,IACjDhB,EACAxC,EACAoD,GANN,gBAGYxD,EAHZ,EAGYA,OAAQK,EAHpB,EAGoBA,WAMK,IATzB,EAGgCwD,eAO1BP,EAAgB,CACdrB,KAAM,QACNmB,QACE,6EAEJL,EAAkB,IAClBF,EAAS,OAGXE,EAAkB/C,GAClBmD,EAAc9C,GACd4C,EAAU,YArBd,kDAuBIK,EAAgB,CACdrB,KAAM,QACNmB,QAAS,KAAMA,UAEjBH,EAAU,YA3Bd,2DALc,sBAwCf,GAAE,CAAC7C,EAAMwC,KAEVW,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAc,EAChB,WACE,IAAMS,EAAmBT,EAAapB,KAChC8B,EAAsBV,EAAaD,QAEZ,aAAzBC,EAAaD,UAGQ,SAArBU,IACFE,EAAAA,GAAAA,KAAWD,GACXT,EAAgB,CAAErB,KAAM,GAAImB,QAAS,MAEd,UAArBU,IACFE,EAAAA,GAAAA,MAAYD,GACZT,EAAgB,CAAErB,KAAM,GAAImB,QAAS,MAExC,CACDa,EACD,CACF,GAAE,CAACZ,KAoCF,SAACf,EAAD,WACE,UAACD,EAAD,YACE,SAAC,EAAD,CAAYb,SA/BG,SAAAI,GACdA,EAQDA,IAAUgB,GASdC,EAASjB,GACTsB,EAAQ,GACRT,EAAgB,CAAEG,MAAOhB,EAAOxB,KAAM,IACtCkD,EAAgB,CACdrB,KAAM,GACNmB,QAAS,KAEXH,EAAU,SAfRK,EAAgB,CACdrB,KAAM,OACNmB,QACE,wEAXJE,EAAgB,CACdrB,KAAM,OACNmB,QAAS,mCAsBd,IAMiB,YAAXJ,IAAwB,SAACkB,EAAA,EAAD,IACb,aAAXlB,IAAyB,SAACmB,EAAA,EAAD,CAAenE,OAAQ8C,IACrC,aAAXE,GAAyB3C,EAAa,IACrC,SAAC+D,EAAA,EAAD,CACEhE,KAAMA,EACNC,WAAYA,EACZC,WA3CS,SAAA+D,GACjB5B,EAAgB,CAAEG,MAAOA,EAAOxC,KAAMiE,IACtCnB,EAAQmB,EACT,EAyCSzB,MAAOA,QAMlB,C,6MCpIM,SAAS0B,EAAmBC,GACjC,OAAOA,EAAI,0CAAsCA,GAASC,CAC3D,CCDD,IAAMC,EAAU,mCACVC,EAAW,gCAEV,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCvE,EAAMwE,GAAvC,yFACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBD,EADpB,iBACoCrE,GACzD,CAAE0E,OAAQF,EAAWE,SAHlB,cACCC,EADD,OAMC/E,EAAS+E,EAASC,KAAKC,QAAQhF,KAAI,YACvC,MAAO,CACLZ,GAFqE,EAA7BA,GAGxCC,MAHqE,EAAzBA,MAI5CC,WAAY+E,EAJyD,EAAlBY,aAMtD,IAZI,kBAcE,CAAElF,OAAAA,EAAQK,WAAY0E,EAASC,KAAKG,cAdtC,kEAiBA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAST,GAAxC,qGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,oBACmBZ,GACxC,CAAEK,OAAQF,EAAWE,SAHlB,cACCC,EADD,SAOHA,EAASC,KADH1F,EANH,EAMGA,MAAO4F,EANV,EAMUA,YAAaI,EANvB,EAMuBA,SAAUC,EANjC,EAMiCA,OAAQC,EANzC,EAMyCA,aAAcC,EANvD,EAMuDA,aANvD,kBASE,CACLnG,MAAAA,EACAC,WAAY+E,EAAmBY,GAC/BI,SAAAA,EACAC,OAAQA,EAAOtF,KAAI,SAAAyF,GAAK,OAAIA,EAAMxD,IAAV,IAAgByD,KAAK,MAC7CC,KAAMJ,EAAaK,QAAQ,GAC3BC,KAAML,EAAaM,MAAM,EAAG,KAfzB,kEAmBA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA4BX,EAAST,GAArC,yFACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BZ,GAChD,CAAEK,OAAQF,EAAWE,SAHlB,cACCC,EADD,OAMCkB,EAASlB,EAASC,KAAKkB,KAAKjG,KAChC,YAA4C,IAAzCZ,EAAwC,EAAxCA,GAAI6C,EAAoC,EAApCA,KAAMiE,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACzB,MAAO,CACL/G,GAAAA,EACA6C,KAAAA,EACAmE,YAAa/B,EAAmB6B,GAChCC,UAAAA,EAEH,IAdE,kBAiBEH,GAjBF,kEAoBA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAA+BjB,EAAST,GAAxC,yFACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BZ,GAChD,CAAEK,OAAQF,EAAWE,SAHlB,cACCC,EADD,OAMCwB,EAAUxB,EAASC,KAAKC,QAAQhF,KAAI,YACxC,MAAO,CACLZ,GAFmE,EAA1BA,GAGzCmH,OAHmE,EAAtBA,OAI7CC,QAJmE,EAAdA,QAMxD,IAZI,kBAcEF,GAdF,kEAiBA,SAAe3C,EAAtB,+CAAO,OAAP,oBAAO,WAAgChB,GAAhC,gGAAuCxC,EAAvC,+BAA8C,EAAGwE,EAAjD,gCACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+B7B,EAD/B,iBAC6CxC,GAClE,CAAE0E,OAAQF,EAAWE,SAHlB,cACCC,EADD,OAMC/E,EAAS+E,EAASC,KAAKC,QAAQhF,KAAI,YACvC,MAAO,CACLZ,GAFqE,EAA7BA,GAGxCC,MAHqE,EAAzBA,MAI5CC,WAAY+E,EAJyD,EAAlBY,aAMtD,IAZI,kBAcE,CACLlF,OAAAA,EACAK,WAAY0E,EAASC,KAAKG,YAC1BtB,aAAckB,EAASC,KAAK0B,gBAjBzB,mE","sources":["components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalerryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/getImagePosterPath.js","utils/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const GalleryItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n  height: auto;\n  width: 240px;\n  background-color: navy;\n  text-align: center;\n  border-radius: 10px;\n  transform: scale(1);\n  transition: transform 250ms linear;\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\n\nexport const GalleryImage = styled.img`\n  display: block;\n  height: 360px;\n  width: 100%;\n  border-radius: 10px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 0;\n  padding: 10px;\n  color: yellow;\n  font-size: 18px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  GalleryItem,\n  GalleryImage,\n  MovieTitle,\n} from './MoviesGalleryItem.styled';\n\nfunction MoviesGalleryItem({ movie: { id, title, posterPath } }) {\n  const location = useLocation();\n  \n  return (\n    <GalleryItem>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <GalleryImage src={posterPath} alt={title} />\n        <MovieTitle>{title}</MovieTitle>\n      </Link>\n    </GalleryItem>\n  );\n}\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MoviesGalleryItem;\n","import styled from '@emotion/styled';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding: 0;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesGalleryItem from 'components/MoviesGalleryItem';\nimport { GalleryList } from './MoviesGallery.styled';\n\nfunction MoviesGallery({ movies }) {\n  return (\n    <GalleryList>\n      {movies.map(movie => (\n        <MoviesGalleryItem key={movie.id} movie={movie} />\n      ))}\n    </GalleryList>\n  );\n}\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      posterPath: PropTypes.string,\n      overview: PropTypes.string,\n      genres: PropTypes.string,\n      vote: PropTypes.number,\n      year: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesGallery;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPagination = styled(ReactPaginate)`\n  margin-top: 50px;\n  margin-bottom: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 10px;\n  list-style-type: none;\n  padding: 0;\n\n  li a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 40px;\n    width: 40px;\n    border-radius: 7px;\n    border: navy 2px solid;\n    text-decoration: none;\n    font-size: 14px;\n    color: navy;\n    cursor: pointer;\n  }\n   li.active a {\n    background-color: navy;\n    border-color: transparent;\n    color: yellow;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledPagination } from './Pagination.styled';\n\nimport { TfiAngleLeft } from 'react-icons/tfi';\nimport { TfiAngleRight } from 'react-icons/tfi';\n\nfunction Pagination({ page, totalPages, changePage }) {\n  const handlePageClick = event => {\n    changePage(event.selected + 1);\n  };\n  return (\n    <StyledPagination\n      previousLabel={<TfiAngleLeft />}\n      nextLabel={<TfiAngleRight />}\n      breakLabel=\"...\"\n      pageCount={totalPages}\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={2}\n      onPageChange={handlePageClick}\n      activeClassName=\"active\"\n      hrefBuilder={(page, pageCount) =>\n        page >= 1 && page <= pageCount ? `/page/${page}` : '#'\n      }\n      forcePage={page - 1}\n    />\n  );\n}\n\nPagination.propTypes = {\n  page: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  totalPages: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import styled from '@emotion/styled';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border: 3px solid navy;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding: 10px;\n  border-radius: 10px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 50px;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 10px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  width: 60px;\n  height: 50px;\n  background-color: navy;\n  border-radius: 10px;\n  cursor: pointer;\n  border: 0;\n  transition: background-color 250ms linear;\n  :hover,\n  :focus-visible {\n    background-color: yellow;\n  }\n`;\n\nexport const SearchIcon = styled(BsSearch)`\n  width: 30px;\n  height: 30px;\n  fill: yellow;\n  transition: fill 250ms linear;\n  :hover,\n  :focus-visible {\n    fill: navy;\n  }\n`;\n","import { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Form, Input, SearchButton, SearchIcon } from './SearchForm.styled';\n\nfunction SearchForm({ onSubmit }) {\n  const formik = useFormik({\n    initialValues: {\n      value: '',\n    },\n    onSubmit: values => {\n      onSubmit(values.value);\n      formik.resetForm();\n    },\n  });\n\n  const { handleSubmit, handleChange, values } = formik;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"value\"\n        onChange={handleChange}\n        value={values.value}\n        placeholder=\"Search movies\"\n      />\n      <SearchButton type=\"submit\">\n        <SearchIcon />\n      </SearchButton>\n    </Form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 320px;  \n  margin: 0 auto;\n  padding: 0 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n  }\n`;\n\nexport const Main = styled.main `\n  flex-grow: 1;\n`\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMoviesByQuery } from 'utils/api';\n\nimport SearchForm from 'components/SearchForm';\nimport MoviesGallery from 'components/MoviesGallery';\nimport Pagination from 'components/Pagination/Pagination';\nimport Loader from 'components/Loader';\nimport { Container, Main } from './Movies.styled';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query'));\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(searchParams.get('page'));\n  const [totalPages, setTotalPages] = useState(0);\n  const [notification, setNotification] = useState({ type: '', message: '' });  \n\n  useEffect(() => {\n    if (!query) return;\n\n    const abortController = new AbortController();\n\n    async function addMoviesByQuery() {\n      setStatus('pending');\n      try {\n        const { movies, totalPages, totalResults } = await getMoviesByQuery(\n          query,\n          page,\n          abortController\n        );\n\n        if (totalResults === 0) {\n          setNotification({\n            type: 'error',\n            message:\n              'Sorry, there are no movies matching your search query. Please try again.',\n          });\n          setSearchedMovies([]);\n          setQuery(null);\n        }\n\n        setSearchedMovies(movies);\n        setTotalPages(totalPages);\n        setStatus('resolved');\n      } catch (error) {\n        setNotification({\n          type: 'error',\n          message: error.message,\n        });\n        setStatus('rejected');\n      }\n    }\n    addMoviesByQuery();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [page, query]);\n\n  useEffect(() => {\n    if (notification) {\n      function handleNotification() {\n        const notificationType = notification.type;\n        const notificationMessage = notification.message;\n\n        if (notification.message === 'canceled') {\n          return;\n        }\n        if (notificationType === 'info') {\n          toast.info(notificationMessage);\n          setNotification({ type: '', message: '' });\n        }\n        if (notificationType === 'error') {\n          toast.error(notificationMessage);\n          setNotification({ type: '', message: '' });\n        }\n      }\n      handleNotification();\n    }\n  }, [notification]);\n\n  const changePage = currentPage => {   \n    setSearchParams({ query: query, page: currentPage })\n    setPage(currentPage);    \n  };\n\n  const handleSearch = value => {\n    if (!value) {\n      setNotification({\n        type: 'info',\n        message: 'Please enter your search query!',\n      });\n      return;\n    }\n\n    if (value === query) {\n      setNotification({\n        type: 'info',\n        message:\n          'You are seeing the images by this query. Please, change your query.',\n      });\n      return;\n    }\n\n    setQuery(value);\n    setPage(1);\n    setSearchParams({ query: value, page: 1 });\n    setNotification({\n      type: '',\n      message: '',\n    });\n    setStatus('idle');\n  };\n\n  return (\n    <Main >\n      <Container>\n        <SearchForm onSubmit={handleSearch} />\n        {status === 'pending' && <Loader />}\n        {status === 'resolved' && <MoviesGallery movies={searchedMovies} />}\n        {status === 'resolved' && totalPages > 1 && (\n          <Pagination\n            page={page}\n            totalPages={totalPages}\n            changePage={changePage}\n            query={query}\n          />\n        )}\n      </Container>\n    </Main>\n  );\n}\nexport default Movies;\n","import defaultImage from 'images/no-image.jpg';\n\nexport function getImagePosterPath(path) {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}\n","import axios from 'axios';\nimport { getImagePosterPath } from 'utils/getImagePosterPath';\n\nconst API_KEY = '1196368753ba671380e452b9a1020481';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies(page, controller) {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`,\n    { signal: controller.signal }\n  );\n\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      posterPath: getImagePosterPath(poster_path),\n    };\n  });\n\n  return { movies, totalPages: response.data.total_pages };\n}\n\nexport async function getMovieDetails(movieId, controller) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n\n  const { title, poster_path, overview, genres, vote_average, release_date } =\n    response.data;\n\n  return {\n    title,\n    posterPath: getImagePosterPath(poster_path),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    vote: vote_average.toFixed(1),\n    year: release_date.slice(0, 4),\n  };\n}\n\nexport async function getMovieCast(movieId, controller) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n\n  const actors = response.data.cast.map(\n    ({ id, name, profile_path, character }) => {\n      return {\n        id,\n        name,\n        profilePath: getImagePosterPath(profile_path),\n        character,\n      };\n    }\n  );\n\n  return actors;\n}\n\nexport async function getMovieReviews(movieId, controller) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n\n  const reviews = response.data.results.map(({ id, author, content }) => {\n    return {\n      id,\n      author,\n      content,\n    };\n  });\n\n  return reviews;\n}\n\nexport async function getMoviesByQuery(query, page = 1, controller) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\n    { signal: controller.signal }\n  );\n\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      posterPath: getImagePosterPath(poster_path),\n    };\n  });\n\n  return {\n    movies,\n    totalPages: response.data.total_pages,\n    totalResults: response.data.total_results,\n  };\n}\n"],"names":["GalleryItem","styled","GalleryImage","MovieTitle","movie","id","title","posterPath","location","useLocation","to","state","from","src","alt","GalleryList","movies","map","StyledPagination","ReactPaginate","page","totalPages","changePage","previousLabel","nextLabel","breakLabel","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","event","selected","activeClassName","hrefBuilder","forcePage","Form","Input","SearchButton","SearchIcon","BsSearch","onSubmit","formik","useFormik","initialValues","value","values","resetForm","handleSubmit","handleChange","type","name","onChange","placeholder","Container","Main","useSearchParams","searchParams","setSearchParams","useState","get","query","setQuery","searchedMovies","setSearchedMovies","status","setStatus","setPage","setTotalPages","message","notification","setNotification","useEffect","abortController","AbortController","addMoviesByQuery","abort","getMoviesByQuery","totalResults","notificationType","notificationMessage","toast","handleNotification","Loader","MoviesGallery","Pagination","currentPage","getImagePosterPath","path","defaultImage","API_KEY","BASE_URL","getTrendingMovies","controller","axios","signal","response","data","results","poster_path","total_pages","getMovieDetails","movieId","overview","genres","vote_average","release_date","genre","join","vote","toFixed","year","slice","getMovieCast","actors","cast","profile_path","character","profilePath","getMovieReviews","reviews","author","content","total_results"],"sourceRoot":""}